{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"./style.scss\";\nimport Login from './login';\nimport Register from './register';\nimport Welcome from './welcome';\nimport Apple from './apple';\nimport Cookies from 'js-cookie';\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\"; // const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100);\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// }\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isAuthenticated = cb => {\n      return Cookies.get(\"user\") === \"loginTrue\";\n    };\n\n    this.authenticate = cb => {\n      console.log('authenticate called');\n      Cookies.set(\"user\", \"loginTrue\");\n      setTimeout(cb, 100);\n    };\n\n    this.signout = cb => {\n      console.log('signing out');\n      Cookies.remove(\"user\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        authenticate: this.authenticate,\n        isAuthenticated: this.isAuthenticated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: () => /*#__PURE__*/React.createElement(Register, {\n        authenticate: this.authenticate,\n        isAuthenticated: this.isAuthenticated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/welcome\",\n      component: Welcome,\n      isAuthenticated: this.isAuthenticated,\n      signout: this.signout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/apple\",\n      component: Welcome,\n      isAuthenticated: this.isAuthenticated,\n      signout: this.signout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated: isAuthenticated,\n  signout: signout,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated() === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    guille: \"5\",\n    isAuthenticated: isAuthenticated,\n    signout: signout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}));\n\nexport default App;","map":{"version":3,"sources":["C:/React/assessment/src/App.js"],"names":["React","Component","Login","Register","Welcome","Apple","Cookies","BrowserRouter","Router","Switch","Route","Redirect","Link","App","isAuthenticated","cb","get","authenticate","console","log","set","setTimeout","signout","remove","render","PrivateRoute","component","rest","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport \"./style.scss\";\nimport Login from './login';\nimport Register from './register';\nimport Welcome from './welcome';\nimport Apple from './apple';\nimport Cookies from 'js-cookie';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\n\n// const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100);\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// }\n\nclass App extends React.Component {\n  isAuthenticated = (cb) => {\n    return Cookies.get(\"user\") === \"loginTrue\";\n  }\n\n  authenticate = (cb) => {\n    console.log('authenticate called');\n    Cookies.set(\"user\", \"loginTrue\");\n    setTimeout(cb, 100);\n  }\n\n  signout = (cb) => {\n    console.log('signing out');\n    Cookies.remove(\"user\");\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/login\" render={() => <Login authenticate={this.authenticate} isAuthenticated={this.isAuthenticated} />} />\n        <Route path=\"/register\" render={() => <Register authenticate={this.authenticate} isAuthenticated={this.isAuthenticated} />} />\n        <PrivateRoute path=\"/welcome\" component={Welcome} isAuthenticated={this.isAuthenticated} signout={this.signout} />\n        <PrivateRoute path=\"/apple\" component={Welcome} isAuthenticated={this.isAuthenticated} signout={this.signout} />\n      </Router>\n    )\n  }\n}\n\nconst PrivateRoute = ({ component: Component, isAuthenticated: isAuthenticated, signout: signout, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    isAuthenticated() === true\n      ? <Component {...props} guille=\"5\" isAuthenticated={isAuthenticated} signout={signout} />\n      : <Redirect to=\"/login\" />\n  )} />\n)\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}