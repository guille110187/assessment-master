{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport AuthApi from './AuthApi';\nimport Cookies from 'js-cookie';\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./style.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"Required\").min(1, \"Password is too short - should be 8 chars minimum.\"),\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        const Auth = React.useContext(AuthApi);\n        Auth.setAuth(true);\n        Cookies.set(\"user\", \"loginTrue\");\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false); //alert(JSON.stringify(values, null, 2));\n\n          this.props.history.replace(\"/welcome\");\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"base-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, \"Sing-In\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"user@email.com\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, isSubmitting ? \"Loanding...\" : \"Sing In\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"link-register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, \"Not registered ? \", /*#__PURE__*/React.createElement(Link, {\n        to: \"register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, \"Sign-up\")))));\n    });\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/React/assessment/src/login.js"],"names":["React","Component","Link","withRouter","AuthApi","Cookies","Formik","Form","Field","Yup","Login","constructor","props","render","name","email","password","object","shape","string","required","min","matches","values","setSubmitting","Auth","useContext","setAuth","set","setTimeout","console","log","history","replace","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AuthApi from './AuthApi';\r\nimport Cookies from 'js-cookie';\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./style.scss\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string()\r\n            .required(\"Required\")\r\n            .min(1, \"Password is too short - should be 8 chars minimum.\"),\r\n          email: Yup.string()\r\n            .email()\r\n            .required(\"Required\"),\r\n          password: Yup.string()\r\n            .required(\"No password provided.\")\r\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n        })}\r\n\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          const Auth = React.useContext(AuthApi)\r\n          Auth.setAuth(true)\r\n          Cookies.set(\"user\", \"loginTrue\")\r\n          setTimeout(() => {\r\n            console.log(\"Logging in\", values);\r\n            setSubmitting(false);\r\n            //alert(JSON.stringify(values, null, 2));\r\n            this.props.history.replace(\"/welcome\");\r\n          }, 500);\r\n          \r\n        }}\r\n\r\n      >\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          } = props;\r\n          return (\r\n            <div className=\"base-container\">\r\n              <div className=\"content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <div className=\"header\">Sing-In</div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      placeholder=\"user@email.com\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.email && touched.email && \"error\"}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Password</label>\r\n                    <input\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.password && touched.password && \"error\"}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                      <div className=\"input-feedback\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                  <button type=\"submit\" disabled={isSubmitting}>\r\n                    {isSubmitting ? \"Loanding...\" : \"Sing In\"}\r\n                  </button>\r\n                </form>\r\n                <div className=\"link-register\">\r\n                  <div>Not registered ? <Link to=\"register\">Sign-up</Link></div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}