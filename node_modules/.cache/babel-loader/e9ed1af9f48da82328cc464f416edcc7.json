{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import './App.css';\n// import \"./style.scss\";\n// import Login from './login';\n// import Register from './register';\n// import Welcome from './welcome';\n// import AuthApi from './AuthApi';\n// import Cookies from 'js-cookie';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"the begining\");\n  }\n\n} // function Authenticator () => {\n//   login () => {\n//   }\n//   logout () =>{\n//   }\n// }\n// class App() {\n//   const [auth, setAuth] = React.useState(false);\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   React.useEffect(() => {\n//     isAthenticated();\n//   }, [])\n//   return (\n//     <div className=\"App\">\n//       <AuthApi.Provider value={{ auth, setAuth }}>\n//         <Router>\n//           <Routes />\n//         </Router>\n//       </AuthApi.Provider>\n//     </div>\n//   );\n// }\n// const Routes = () => {\n//   //const Auth = React.useContext(AuthApi)\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   return (\n//     <Switch>\n//       <ProtectedLogin path=\"/login\" auth={props.isAthenticated}  exact component={Login} />\n//       <ProtectedRegister path=\"/register\" auth={props.isAthenticated}  exact component={Register} />\n//       <ProtectedRoute path=\"/\" auth={props.isAthenticated}  component={Welcome} />\n//     </Switch>\n//   )\n// }\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/login\" />\n//         )\n//       }\n//     />\n//   )\n// }\n// const ProtectedLogin = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n//       }\n//     />\n//   )\n// }\n// const ProtectedRegister = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n//       }\n//     />\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/React/assessment/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Redirect","Link","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,EAKEC,IALF,QAMO,kBANP;;AASA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD;;AALyB,C,CAQ5B;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGE,eAAeD,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import \"./style.scss\";\n// import Login from './login';\n// import Register from './register';\n// import Welcome from './welcome';\n// import AuthApi from './AuthApi';\n// import Cookies from 'js-cookie';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>the begining</div>\n    )\n  }\n}\n\n// function Authenticator () => {\n//   login () => {\n\n//   }\n\n//   logout () =>{\n\n//   }\n// }\n\n// class App() {\n//   const [auth, setAuth] = React.useState(false);\n\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   React.useEffect(() => {\n//     isAthenticated();\n//   }, [])\n\n//   return (\n//     <div className=\"App\">\n//       <AuthApi.Provider value={{ auth, setAuth }}>\n//         <Router>\n//           <Routes />\n//         </Router>\n//       </AuthApi.Provider>\n//     </div>\n//   );\n// }\n\n// const Routes = () => {\n//   //const Auth = React.useContext(AuthApi)\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n  \n//   return (\n//     <Switch>\n//       <ProtectedLogin path=\"/login\" auth={props.isAthenticated}  exact component={Login} />\n//       <ProtectedRegister path=\"/register\" auth={props.isAthenticated}  exact component={Register} />\n//       <ProtectedRoute path=\"/\" auth={props.isAthenticated}  component={Welcome} />\n//     </Switch>\n//   )\n\n// }\n\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/login\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n\n// const ProtectedLogin = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n// const ProtectedRegister = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}