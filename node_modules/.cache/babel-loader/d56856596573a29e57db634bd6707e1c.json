{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\register.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nfunction validateEmail(value) {\n  let error;\n\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n}\n\nfunction validateUsername(value) {\n  let error;\n\n  if (value === 'admin') {\n    error = 'Nice try!';\n  }\n\n  return error;\n}\n\nexport const Register = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, \"Signup\"), /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    username: '',\n    email: ''\n  },\n  onSubmit: values => {\n    // same shape as initial values\n    console.log(values);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, ({\n  errors,\n  touched,\n  isValidating\n}) => /*#__PURE__*/React.createElement(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Field, {\n  name: \"email\",\n  validate: validateEmail,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 11\n  }\n}), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 45\n  }\n}, errors.email), /*#__PURE__*/React.createElement(Field, {\n  name: \"username\",\n  validate: validateUsername,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }\n}), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 51\n  }\n}, errors.username), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}, \"Submit\"))));\nexport default Register;","map":{"version":3,"sources":["C:/React/assessment/src/register.js"],"names":["React","Formik","Form","Field","validateEmail","value","error","test","validateUsername","Register","username","email","values","console","log","errors","touched","isValidating"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,KAAJ;;AACA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDF,KAAjD,CAAL,EAA8D;AACnEC,IAAAA,KAAK,GAAG,uBAAR;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,SAASE,gBAAT,CAA0BH,KAA1B,EAAiC;AAC/B,MAAIC,KAAJ;;AACA,MAAID,KAAK,KAAK,OAAd,EAAuB;AACrBC,IAAAA,KAAK,GAAG,WAAR;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,OAAO,MAAMG,QAAQ,GAAG,mBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AACE,EAAA,aAAa,EAAE;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,KAAK,EAAE;AAFM,GADjB;AAKE,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUG,CAAC;AAAEG,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,QAAQ,EAAEb,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGW,MAAM,CAACJ,KAAP,IAAgBK,OAAO,CAACL,KAAxB,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMI,MAAM,CAACJ,KAAb,CAFpC,eAIE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,QAAQ,EAAEH,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKGO,MAAM,CAACL,QAAP,IAAmBM,OAAO,CAACN,QAA3B,iBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMK,MAAM,CAACL,QAAb,CAL1C,eAOE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CAXJ,CAFF,CADK;AA4BP,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nfunction validateEmail(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address';\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateUsername(value) {\r\n  let error;\r\n  if (value === 'admin') {\r\n    error = 'Nice try!';\r\n  }\r\n  return error;\r\n}\r\n\r\nexport const Register = () => (\r\n  <div>\r\n    <h1>Signup</h1>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n      }}\r\n      onSubmit={values => {\r\n        // same shape as initial values\r\n        console.log(values);\r\n      }}\r\n    >\r\n      {({ errors, touched, isValidating }) => (\r\n        <Form>\r\n          <Field name=\"email\" validate={validateEmail} />\r\n          {errors.email && touched.email && <div>{errors.email}</div>}\r\n\r\n          <Field name=\"username\" validate={validateUsername} />\r\n          {errors.username && touched.username && <div>{errors.username}</div>}\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}