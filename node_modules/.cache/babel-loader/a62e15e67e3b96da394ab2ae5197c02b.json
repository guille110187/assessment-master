{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import './App.css';\n// import \"./style.scss\";\n\nimport Login from './login';\nimport Register from './register';\nimport Welcome from './welcome'; // import AuthApi from './AuthApi';\n\nimport Cookies from 'js-cookie';\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\"; // const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100);\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// }\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isAuthenticated = cb => {\n      return Cookies.get(\"user\") === \"loginTrue\";\n    };\n\n    this.authenticate = cb => {\n      console.log('authenticate called');\n      Cookies.set(\"user\", \"loginTrue\");\n      setTimeout(cb, 100);\n    };\n\n    this.signout = cb => {\n      console.log('signing out');\n      Cookies.remove(\"user\");\n      setTimeout(cb, 100);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        authenticate: this.authenticate,\n        isAuthenticated: this.isAuthenticated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: () => /*#__PURE__*/React.createElement(Register, {\n        authenticate: this.authenticate,\n        isAuthenticated: this.isAuthenticated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/welcome\",\n      render: () => /*#__PURE__*/React.createElement(Welcome, {\n        isAuthenticated: this.isAuthenticated,\n        signout: this.signout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated: isAuthenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => props.isAuthenticated() === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n})); // function Authenticator () => {\n//   login () => {\n//   }\n//   logout () =>{\n//   }\n// }\n// class App() {\n//   const [auth, setAuth] = React.useState(false);\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   React.useEffect(() => {\n//     isAthenticated();\n//   }, [])\n//   return (\n//     <div className=\"App\">\n//       <AuthApi.Provider value={{ auth, setAuth }}>\n//         <Router>\n//           <Routes />\n//         </Router>\n//       </AuthApi.Provider>\n//     </div>\n//   );\n// }\n// const Routes = () => {\n//   //const Auth = React.useContext(AuthApi)\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   return (\n//     <Switch>\n//       <ProtectedLogin path=\"/login\" auth={props.isAthenticated}  exact component={Login} />\n//       <ProtectedRegister path=\"/register\" auth={props.isAthenticated}  exact component={Register} />\n//       <ProtectedRoute path=\"/\" auth={props.isAthenticated}  component={Welcome} />\n//     </Switch>\n//   )\n// }\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/login\" />\n//         )\n//       }\n//     />\n//   )\n// }\n// const ProtectedLogin = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n//       }\n//     />\n//   )\n// }\n// const ProtectedRegister = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n//       }\n//     />\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/React/assessment/src/App.js"],"names":["React","Component","Login","Register","Welcome","Cookies","BrowserRouter","Router","Switch","Route","Redirect","Link","App","isAuthenticated","cb","get","authenticate","console","log","set","setTimeout","signout","remove","render","PrivateRoute","component","rest","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import \"./style.scss\";\nimport Login from './login';\nimport Register from './register';\nimport Welcome from './welcome';\n// import AuthApi from './AuthApi';\nimport Cookies from 'js-cookie';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\n\n// const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100);\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// }\n\nclass App extends React.Component {\n  isAuthenticated = (cb) => {\n    return Cookies.get(\"user\") === \"loginTrue\";\n  }\n\n  authenticate = (cb) => {\n    console.log('authenticate called');\n    Cookies.set(\"user\", \"loginTrue\");\n    setTimeout(cb, 100);\n  }\n\n  signout = (cb) => {\n    console.log('signing out');\n    Cookies.remove(\"user\");\n    setTimeout(cb, 100);\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/login\" render={() => <Login authenticate={this.authenticate} isAuthenticated={this.isAuthenticated} />} />\n        <Route path=\"/register\" render={() => <Register authenticate={this.authenticate} isAuthenticated={this.isAuthenticated} />} />\n        <PrivateRoute path=\"/welcome\" render={() => <Welcome isAuthenticated={this.isAuthenticated} signout={this.signout} />} />\n      </Router>\n    )\n  }\n}\n\nconst PrivateRoute = ({ component: Component, isAuthenticated: isAuthenticated, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    props.isAuthenticated() === true\n      ? <Component {...props} />\n      : <Redirect to=\"/login\" />\n  )} />\n)\n\n// function Authenticator () => {\n//   login () => {\n\n//   }\n\n//   logout () =>{\n\n//   }\n// }\n\n// class App() {\n//   const [auth, setAuth] = React.useState(false);\n\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n//   React.useEffect(() => {\n//     isAthenticated();\n//   }, [])\n\n//   return (\n//     <div className=\"App\">\n//       <AuthApi.Provider value={{ auth, setAuth }}>\n//         <Router>\n//           <Routes />\n//         </Router>\n//       </AuthApi.Provider>\n//     </div>\n//   );\n// }\n\n// const Routes = () => {\n//   //const Auth = React.useContext(AuthApi)\n//   isAthenticated = () => {\n//     const user = Cookies.get(\"user\");\n//     if (user) {\n//       return true;\n//       // setAuth(true);\n//     }\n//     return false;\n//   }\n\n//   return (\n//     <Switch>\n//       <ProtectedLogin path=\"/login\" auth={props.isAthenticated}  exact component={Login} />\n//       <ProtectedRegister path=\"/register\" auth={props.isAthenticated}  exact component={Register} />\n//       <ProtectedRoute path=\"/\" auth={props.isAthenticated}  component={Welcome} />\n//     </Switch>\n//   )\n\n// }\n\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/login\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n\n// const ProtectedLogin = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n// const ProtectedRegister = ({ component: Component, ...rest }) => {\n//   return (\n//     <Route\n//       {...rest}\n//       render={() => !this.isAthenticated() ? (\n//         <Component />\n//       ) :\n//         (\n//           <Redirect to=\"/welcome\" />\n//         )\n\n//       }\n//     />\n//   )\n// }\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}