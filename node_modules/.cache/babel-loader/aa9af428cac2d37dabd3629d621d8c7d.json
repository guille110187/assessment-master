{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\register.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport AuthApi from './AuthApi';\nimport Cookies from 'js-cookie';\nimport { Formik, Form, Field } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport \"./style.scss\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"Required\").min(1, \"Password is too short - should be 8 chars minimum.\"),\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n          alert(JSON.stringify(values, null, 2));\n          this.props.history.replace(\"/login\");\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"base-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"Sing-Up\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"John Doe\",\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.name && touched.name && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }\n      }, errors.email)), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"user@email.com\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, errors.email), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }\n      }, errors.password), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, isSubmitting ? \"Submitting...\" : \"Sing-Up\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"link-register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, \"Not registered ? Sign-up\")))));\n    });\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["C:/React/assessment/src/register.js"],"names":["React","Component","Link","withRouter","AuthApi","Cookies","Formik","Form","Field","EmailValidator","Yup","Register","constructor","props","render","name","email","password","object","shape","string","required","min","matches","values","setSubmitting","setTimeout","console","log","alert","JSON","stringify","history","replace","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React , { Component }from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AuthApi from './AuthApi';\r\nimport Cookies from 'js-cookie';\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./style.scss\";\r\n\r\n\r\nclass Register extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n    \r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n          }}\r\n\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string()\r\n              .required(\"Required\")\r\n              .min(1, \"Password is too short - should be 8 chars minimum.\"),\r\n            email: Yup.string()\r\n              .email()\r\n              .required(\"Required\"),\r\n            password: Yup.string()\r\n              .required(\"No password provided.\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n          })}\r\n\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n              alert(JSON.stringify(values, null, 2));\r\n              this.props.history.replace(\"/login\");\r\n            }, 500);\r\n          }}\r\n\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n            return (\r\n              <div className=\"base-container\">\r\n                <div className=\"content\">\r\n                  <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"header\">Sing-Up</div>\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"John Doe\"\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.name && touched.name && \"error\"}\r\n\r\n                    />\r\n                    {errors.name && touched.name && (\r\n                      <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n                    </div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      placeholder=\"user@email.com\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.email && touched.email && \"error\"}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n                    <label htmlFor=\"email\">Password</label>\r\n                    <input\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.password && touched.password && \"error\"}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                      <div className=\"input-feedback\">{errors.password}</div>\r\n                    )}\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                      {isSubmitting ? \"Submitting...\" : \"Sing-Up\"}\r\n                    </button>\r\n                  </form>\r\n                  <div className=\"link-register\">\r\n                    <Link to=\"login\">\r\n                      <div>Not registered ? Sign-up</div>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        </Formik>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(Register);\r\n"]},"metadata":{},"sourceType":"module"}