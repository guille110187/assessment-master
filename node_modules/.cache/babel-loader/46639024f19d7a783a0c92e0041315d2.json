{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { BoxLoading } from 'react-loadingg';\nimport \"./style.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return this.props.isAuthenticated() ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/welcome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"Required\").min(1, \"Password is too short - should be 8 chars minimum.\"),\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        this.props.authenticate(() => {\n          console.log('cookie is in from the invocation');\n          this.props.history.push('/welcome');\n        });\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false); //alert(JSON.stringify(values, null, 2));\n          // this.props.history.replace(\"/apple\");\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"base-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, \"Sing-Up\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"user@email.com\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }, errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, isSubmitting ? \"Loanding...\" : \"Sing Up\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"link-login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, \"Already registered ? \", /*#__PURE__*/React.createElement(Link, {\n        to: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }, \"Log-in\"), \" \"))));\n    });\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/React/assessment/src/login.js"],"names":["React","Component","Link","Redirect","withRouter","Formik","Form","Field","Yup","BoxLoading","Login","constructor","props","render","isAuthenticated","name","email","password","object","shape","string","required","min","matches","values","setSubmitting","authenticate","console","log","history","push","setTimeout","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { BoxLoading } from 'react-loadingg';\r\nimport \"./style.scss\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.isAuthenticated() ?\r\n        <Redirect to=\"/welcome\" />\r\n        :\r\n\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string()\r\n            .required(\"Required\")\r\n            .min(1, \"Password is too short - should be 8 chars minimum.\"),\r\n          email: Yup.string()\r\n            .email()\r\n            .required(\"Required\"),\r\n          password: Yup.string()\r\n            .required(\"No password provided.\")\r\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n        })}\r\n\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          this.props.authenticate(() => {\r\n            console.log('cookie is in from the invocation');\r\n            this.props.history.push('/welcome')\r\n          });\r\n          setTimeout(() => {\r\n            console.log(\"Logging in\", values);\r\n            setSubmitting(false);\r\n             //alert(JSON.stringify(values, null, 2));\r\n           // this.props.history.replace(\"/apple\");\r\n          }, 500);\r\n        }}\r\n\r\n      >\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          } = props;\r\n          return (\r\n            <div className=\"base-container\">\r\n              <div className=\"content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <div className=\"header\">Sing-Up</div>\r\n               \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      placeholder=\"user@email.com\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.email && touched.email && \"error\"}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={errors.password && touched.password && \"error\"}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                      <div className=\"input-feedback\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                  <button type=\"submit\" disabled={isSubmitting}>\r\n                    {isSubmitting ? \"Loanding...\" : \"Sing Up\"}\r\n                  </button>\r\n                </form>\r\n                <div className=\"link-login\">\r\n                  <div>Already registered ? <Link to=\"login\">Log-in</Link> </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Formik>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}