{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\assessment\\\\src\\\\register.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthApi from './AuthApi';\nimport Cookies from 'js-cookie';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport \"./style.scss\";\n\nfunction Login() {\n  const Auth = React.useContext(AuthApi);\n\n  const handleOnClick = () => {\n    Auth.setAuth(true);\n    Cookies.set(\"user\", \"loginTrue\");\n  };\n\n  const Login = () => /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n        setSubmitting(false);\n      }, 500);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"base-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Sing-Up\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"John Doe\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"user@email.com\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email && \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, errors.email), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password && \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, errors.password), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Sing-Up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \"Not registered ? Sign-up\")))));\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/React/assessment/src/register.js"],"names":["React","Link","AuthApi","Cookies","Formik","EmailValidator","Yup","Login","Auth","useContext","handleOnClick","setAuth","set","name","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthApi from './AuthApi';\r\nimport Cookies from 'js-cookie';\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./style.scss\";\r\n\r\n\r\nfunction Login() {\r\n  const Auth = React.useContext(AuthApi)\r\n  const handleOnClick = () => {\r\n    Auth.setAuth(true)\r\n    Cookies.set(\"user\", \"loginTrue\")\r\n  }\r\n  const Login = () => (\r\n\r\n    <Formik\r\n\r\n      initialValues={{ name: \"\", email: \"\", password: \"\" }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          console.log(\"Logging in\", values);\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n\r\n\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email()\r\n          .required(\"Required\"),\r\n        password: Yup.string()\r\n          .required(\"No password provided.\")\r\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n      })}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        } = props;\r\n        return (\r\n          <div className=\"base-container\">\r\n            <div className=\"content\">\r\n              <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"header\">Sing-Up</div>\r\n                <label htmlFor=\"name\">Full Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"John Doe\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"user@email.com\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={errors.email && touched.email && \"error\"}\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n                <label htmlFor=\"email\">Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={errors.password && touched.password && \"error\"}\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Sing-Up\r\n          </button>\r\n              </form>\r\n              <div className=\"link-register\">\r\n                <Link to=\"login\">\r\n                  <div>Not registered ? Sign-up</div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}